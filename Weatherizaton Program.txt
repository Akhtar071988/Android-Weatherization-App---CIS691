import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.BorderFactory;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.SpringLayout;

public class WeatherizationQuestioanire {

 public static void main(String[] args) {
  javax.swing.SwingUtilities.invokeLater(new Runnable() {
   public void run() {
    MainWindow mainWindow = new MainWindow();
    mainWindow.setVisible(true);
   }
  });
 }
}

class MainWindow extends JFrame {
 
 private JButton submit = new JButton("Submit");
 
 private JButton restart = new JButton("Restart");
 
 private JPanel contentPanel = new JPanel();
 
 private JPanel currentPage;
 
 private String name;
 
 public MainWindow() {
  setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
  setTitle("Weatherization Questionaire");
  setSize(1000, 700);
  
  SpringLayout layout = new SpringLayout();
  setLayout(layout);
  
  JLabel title = new JLabel("Weatherization Questionaire");
  title.setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));

  JPanel buttons = new JPanel();
  buttons.add(submit);
  buttons.add(restart);
  
  add(title);
  add(contentPanel);
  add(buttons);
  
  layout.putConstraint(SpringLayout.HORIZONTAL_CENTER, title, 20, SpringLayout.HORIZONTAL_CENTER, getContentPane());
  layout.putConstraint(SpringLayout.WEST, contentPanel, 10, SpringLayout.WEST, getContentPane());
  layout.putConstraint(SpringLayout.NORTH, contentPanel, 0, SpringLayout.SOUTH, title);
  layout.putConstraint(SpringLayout.SOUTH, buttons, -10, SpringLayout.SOUTH, getContentPane());
  layout.putConstraint(SpringLayout.HORIZONTAL_CENTER, buttons, 0, SpringLayout.HORIZONTAL_CENTER, getContentPane());
  
  submit.addActionListener(new ActionListener() {
   @Override
   public void actionPerformed(ActionEvent e) {
    submit();
   }
  });
  
  restart.addActionListener(new ActionListener() {
   @Override
   public void actionPerformed(ActionEvent e) {
    start();
   }
  });
  
  start();
 }
 
 private void start() {
  submit.setVisible(true);
  showPage(new FirstStep());
 }

 private void showPage(JPanel page) {
  contentPanel.removeAll();
  currentPage = page;
  contentPanel.add(page);
  contentPanel.revalidate();
  contentPanel.repaint();
 }

 protected void submit() {
  if (currentPage instanceof FirstStep) {
   FirstStep firstStep = (FirstStep) currentPage;
   int score = firstStep.getAge();
   name = firstStep.getName();
   if (score < 21) {
    showPage(new FailurePage(name));
    submit.setVisible(false);
   } else {
    showPage(new SecondStep());
   }
  } else if (currentPage instanceof SecondStep) {
   SecondStep secondStep = (SecondStep) currentPage;
   submit.setVisible(false);
   if (secondStep.getScore() > 74) {
    showPage(new FailurePage(name));
   } else {
    showPage(new SuccessPage(name));
   }
  }
 }
}

class FirstStep extends JPanel {
 
 private JTextField Name = new JTextField();
 
 private JTextField Area = new JTextField();
 
 public FirstStep() {
  setLayout(new BorderLayout(5, 5));
  add(new JLabel("Please fill out the questionaire below:"), BorderLayout.NORTH);
  
  JPanel panel = new JPanel();
  
  Name.setPreferredSize(new Dimension(100, 20));
  panel.setLayout(new GridLayout(5, 5, 5, 5));
  panel.add(new JLabel("Name:"));
  panel.add(Name);
  panel.add(new JLabel("Area: Enter 21 for Noth GA, 22 for Atl Metro, 23 for Coastal GA, 24 for South GA"));  
  panel.add(Area);
  
  
  add(panel, BorderLayout.WEST);
 }

 public int getAge() {
  return Integer.valueOf(Area.getText());
 }
 
 public String getName() {
  return Name.getText();
 }
}

class SecondStep extends JPanel {
 
 private JRadioButton North_Georgia = new JRadioButton("North Georgia");
 private JRadioButton Atlanta_Metro = new JRadioButton("Atlanta Metro");
 private JRadioButton Coastal_Georgia = new JRadioButton("Coastal Georgia");
 private JRadioButton South_Georgia = new JRadioButton("South Georgia");
 
 private JRadioButton Single_Story = new JRadioButton("Single Story");
 private JRadioButton Multi_Story = new JRadioButton("Multi Story");
 private JRadioButton Apartment = new JRadioButton("Apartment");
 private JRadioButton Town_House = new JRadioButton("Town_House");
 
 private JRadioButton YearCategory_1 = new JRadioButton("1950 or earlier");
 private JRadioButton YearCategory_2 = new JRadioButton("1951 to 1970");
 private JRadioButton YearCategory_3 = new JRadioButton("1971 to 1990");
 private JRadioButton YearCategory_4 = new JRadioButton("1991 to Present");

 private JRadioButton HomeSize_1 = new JRadioButton("1950 or smaller");
 private JRadioButton HomeSize_2 = new JRadioButton("1951 to 2500");
 private JRadioButton HomeSize_3 = new JRadioButton("2500 to 3000");
 private JRadioButton HomeSize_4 = new JRadioButton("3000 or larger");
 
 private JRadioButton Drafty = new JRadioButton("Drafty/Street Noise");
 private JRadioButton IDoNotKnow = new JRadioButton("Typical/I Don't Know");
 private JRadioButton HomeownerWeatherized = new JRadioButton("Homeowner Weatherized");
 private JRadioButton ProfessionallyWeatherized = new JRadioButton("Professionally Weatherized");
 
 private JRadioButton Yes = new JRadioButton("Yes");
 private JRadioButton No = new JRadioButton("No");
 
 private JRadioButton IDonotKnow = new JRadioButton("I Don't Know");
 private JRadioButton Uninsulated = new JRadioButton("Uninsulated");
 private JRadioButton FourInches = new JRadioButton("Typical 4");
 private JRadioButton SixInches = new JRadioButton("Typical 6");
 
 private JRadioButton Single = new JRadioButton("Single");
 private JRadioButton Double = new JRadioButton("Double");
 private JRadioButton Triple = new JRadioButton("Triple");
 
 private JRadioButton DoubleW = new JRadioButton("Double");
 private JRadioButton single = new JRadioButton("Single");
 private JRadioButton Casement = new JRadioButton("Casement");
 private JRadioButton Jalousie = new JRadioButton("Jalousie");
 private JRadioButton Sliding = new JRadioButton("Sliding");
 
 private JRadioButton Small = new JRadioButton("Small");
 private JRadioButton Standard = new JRadioButton("Standard");
 private JRadioButton Large = new JRadioButton("Large");
 private JRadioButton VeryLarge = new JRadioButton("Very Large");
 
 private JRadioButton HeatingYears0_4 = new JRadioButton("0 to 4 years");
 private JRadioButton HeatingYears4_8 = new JRadioButton("4 to 8 years");
 private JRadioButton HeatingYears8_12 = new JRadioButton("8 to 12 years");
 private JRadioButton HeatingYears13_or_more = new JRadioButton("13+ years");
 
 private JRadioButton HeatingTemp_1 = new JRadioButton("68F to 70F");
 private JRadioButton HeatingTemp_2 = new JRadioButton("71F to 75F");
 private JRadioButton HeatingTemp_3 = new JRadioButton("76F to 80F");
 private JRadioButton HeatingTemp_4 = new JRadioButton("81+F");

 private JRadioButton CoolingYears0_4 = new JRadioButton("0 to 4 years");
 private JRadioButton CoolingYears4_8 = new JRadioButton("4 to 8 years");
 private JRadioButton CoolingYears8_12 = new JRadioButton("8 to 12 years");
 private JRadioButton CoolingYears13_or_more = new JRadioButton("13+ years");
 
 private JRadioButton CoolingTemp_1 = new JRadioButton("60F to 69F");
 private JRadioButton CoolingTemp_2 = new JRadioButton("70F to 79F");
 private JRadioButton CoolingTemp_3 = new JRadioButton("No AC");
 
 private JRadioButton WaterHeaterYears0_3 = new JRadioButton("0 to 3 years");
 private JRadioButton WaterHeaterYears4_7 = new JRadioButton("4 to 7 years");
 private JRadioButton WaterHeaterYears8_12 = new JRadioButton("8 to 12 years");
 private JRadioButton WaterHeaterYears13_or_more = new JRadioButton("13+ years");
 
 private JCheckBox TV = new JCheckBox("Television");
 private JCheckBox Fridge = new JCheckBox("Refridgerator");
 private JCheckBox Dishwasher = new JCheckBox("Dishwasher");
 private JCheckBox Oven = new JCheckBox("Oven");
 private JCheckBox Stove = new JCheckBox("Stove");
 private JCheckBox ClothesWasher = new JCheckBox("Clothes Washer");
 private JCheckBox ClothesDryer = new JCheckBox("Clothes Dryer");
 private JCheckBox Hot_Tub = new JCheckBox("Hot Tub");
 private JCheckBox Swimming_Pool = new JCheckBox("Swimming Pool");
 private JCheckBox AC = new JCheckBox("AC");
 private JCheckBox Furnace = new JCheckBox("Furnace");
 
 public SecondStep() {
  ButtonGroup AreaGroup = new ButtonGroup();
  AreaGroup.add(North_Georgia);
  AreaGroup.add(Atlanta_Metro);
  AreaGroup.add(Coastal_Georgia);
  AreaGroup.add(South_Georgia);
  
  ButtonGroup TypeofHouseGroup = new ButtonGroup();
  TypeofHouseGroup.add(Single_Story);
  TypeofHouseGroup.add(Multi_Story);
  TypeofHouseGroup.add(Apartment);
  TypeofHouseGroup.add(Town_House);
  
  ButtonGroup HomeBuiltYearGroup = new ButtonGroup();
  HomeBuiltYearGroup.add(YearCategory_1);
  HomeBuiltYearGroup.add(YearCategory_2);
  HomeBuiltYearGroup.add(YearCategory_3);
  HomeBuiltYearGroup.add(YearCategory_4);

  ButtonGroup SquareFtGroup = new ButtonGroup();
  SquareFtGroup.add(HomeSize_1);
  SquareFtGroup.add(HomeSize_2);
  SquareFtGroup.add(HomeSize_3);
  SquareFtGroup.add(HomeSize_4);
  
  ButtonGroup AirLeaksGroup = new ButtonGroup();
  AirLeaksGroup.add(Drafty);
  AirLeaksGroup.add(IDoNotKnow);
  AirLeaksGroup.add(HomeownerWeatherized);
  AirLeaksGroup.add(ProfessionallyWeatherized);
  
  ButtonGroup AirDuctsRepairGroup = new ButtonGroup();
  AirDuctsRepairGroup.add(Yes);
  AirDuctsRepairGroup.add(No);
  
  ButtonGroup InsulationGroup = new ButtonGroup();
  InsulationGroup.add(IDonotKnow);
  InsulationGroup.add(Uninsulated);
  InsulationGroup.add(FourInches);
  InsulationGroup.add(SixInches);
  
  ButtonGroup WindowPanesGroup = new ButtonGroup();
  WindowPanesGroup.add(Single);
  WindowPanesGroup.add(Double);
  WindowPanesGroup.add(Triple);
  
  ButtonGroup WindowTypesGroup = new ButtonGroup();
  WindowTypesGroup.add(DoubleW);
  WindowTypesGroup.add(single);
  WindowTypesGroup.add(Casement);
  WindowTypesGroup.add(Jalousie);
  WindowTypesGroup.add(Sliding);
  
  ButtonGroup WindowSizesGroup = new ButtonGroup();
  WindowSizesGroup.add(Small);
  WindowSizesGroup.add(Standard);
  WindowSizesGroup.add(Large);
  WindowSizesGroup.add(VeryLarge);
  
  ButtonGroup HeatingAgeGroup = new ButtonGroup();
  HeatingAgeGroup.add(HeatingYears0_4);
  HeatingAgeGroup.add(HeatingYears4_8);
  HeatingAgeGroup.add(HeatingYears8_12);
  HeatingAgeGroup.add(HeatingYears13_or_more);
  
  ButtonGroup HeatingTemperatureGroup = new ButtonGroup();
  HeatingTemperatureGroup.add(HeatingTemp_1);
  HeatingTemperatureGroup.add(HeatingTemp_2);
  HeatingTemperatureGroup.add(HeatingTemp_3);
  HeatingTemperatureGroup.add(HeatingTemp_4);
  
  ButtonGroup CoolingSystemAgeGroup = new ButtonGroup();
  CoolingSystemAgeGroup.add(CoolingYears0_4);
  CoolingSystemAgeGroup.add(CoolingYears4_8);
  CoolingSystemAgeGroup.add(CoolingYears8_12);
  CoolingSystemAgeGroup.add(CoolingYears13_or_more);
  
  ButtonGroup CoolingSystemSettingGroup = new ButtonGroup();
  CoolingSystemSettingGroup.add(CoolingTemp_1);
  CoolingSystemSettingGroup.add(CoolingTemp_2);
  CoolingSystemSettingGroup.add(CoolingTemp_3);
  
  ButtonGroup WaterHeaterAgeGroup = new ButtonGroup();
  WaterHeaterAgeGroup.add(WaterHeaterYears0_3);
  WaterHeaterAgeGroup.add(WaterHeaterYears4_7);
  WaterHeaterAgeGroup.add(WaterHeaterYears8_12);
  WaterHeaterAgeGroup.add(WaterHeaterYears13_or_more);
  
  setLayout(new GridBagLayout());
  GridBagConstraints constraints = new GridBagConstraints();
  constraints.anchor = GridBagConstraints.WEST;
  constraints.gridx = 0;
  constraints.gridy = 0;
  add(new JLabel("1) Area:"), constraints);
  constraints.gridx++;
  add(North_Georgia, constraints);
  constraints.gridx++;
  add(Atlanta_Metro, constraints);
  constraints.gridx++;
  add(Coastal_Georgia, constraints);
  constraints.gridx++;
  add(South_Georgia, constraints);
  constraints.gridx++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("2) Type of House:"), constraints);
  constraints.gridx++;
  add(Single_Story, constraints);
  constraints.gridx++;
  add(Multi_Story, constraints);
  constraints.gridx++;
  add(Apartment, constraints);
  constraints.gridx++;
  add(Town_House, constraints);
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("3) Year Your Home Was Built:"), constraints);
  constraints.gridx++;
  add(YearCategory_1, constraints);
  constraints.gridy++;
  add(YearCategory_2, constraints);
  constraints.gridy++;
  add(YearCategory_3, constraints);
  constraints.gridy++;
  add(YearCategory_4, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("4) Enter the Square Footage of Your House:"), constraints);
  constraints.gridx++;
  add(HomeSize_1, constraints);
  constraints.gridy++;
  add(HomeSize_2, constraints);
  constraints.gridy++;
  add(HomeSize_3, constraints);
  constraints.gridy++;
  add(HomeSize_4, constraints);
  constraints.gridy++;
 
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("5) Air Leaks:"), constraints);
  constraints.gridx++;
  add(Drafty, constraints);
  constraints.gridy++;
  add(IDoNotKnow, constraints);
  constraints.gridy++;
  add(HomeownerWeatherized, constraints);
  constraints.gridy++;
  add(ProfessionallyWeatherized, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("6) Do you believe your air ducts need repair?"), constraints);
  constraints.gridx++;
  add(Yes, constraints);
  constraints.gridy++;
  add(No, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("7) Wall, Ceiling, and Floor Insulation:"), constraints);
  constraints.gridx++;
  add(IDonotKnow, constraints);
  constraints.gridy++;
  add(Uninsulated, constraints);
  constraints.gridy++;
  add(FourInches, constraints);
  constraints.gridy++;
  add(SixInches, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("8) Window Panes:"), constraints);
  constraints.gridx++;
  add(Single, constraints);
  constraints.gridy++;
  add(Double, constraints);
  constraints.gridy++;
  add(Triple, constraints);
  constraints.gridy++;

  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("9) Window Types:"), constraints);
  constraints.gridx++;
  add(DoubleW, constraints);
  constraints.gridy++;
  add(single, constraints);
  constraints.gridy++;
  add(Casement, constraints);
  constraints.gridy++;
  add(Jalousie, constraints);
  constraints.gridy++;
  add(Sliding, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("10) Window Sizes:"), constraints);
  constraints.gridx++;
  add(Small, constraints);
  constraints.gridy++;
  add(Standard, constraints);
  constraints.gridy++;
  add(Large, constraints);
  constraints.gridy++;
  add(VeryLarge, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("11) Heating Age:"), constraints);
  constraints.gridx++;
  add(HeatingYears0_4, constraints);
  constraints.gridy++;
  add(HeatingYears4_8, constraints);
  constraints.gridy++;
  add(HeatingYears8_12, constraints);
  constraints.gridy++;
  add(HeatingYears13_or_more, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("12) Heating Temperature:"), constraints);
  constraints.gridx++;
  add(HeatingTemp_1, constraints);
  constraints.gridy++;
  add(HeatingTemp_2, constraints);
  constraints.gridy++;
  add(HeatingTemp_3, constraints);
  constraints.gridy++;
  add(HeatingTemp_4, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("13) Cooling System Age:"), constraints);
  constraints.gridx++;
  add(CoolingYears0_4, constraints);
  constraints.gridy++;
  add(CoolingYears4_8, constraints);
  constraints.gridy++;
  add(CoolingYears8_12, constraints);
  constraints.gridy++;
  add(CoolingYears13_or_more, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("14) Cooling System Setting:"), constraints);
  constraints.gridx++;
  add(CoolingTemp_1, constraints);
  constraints.gridy++;
  add(CoolingTemp_2, constraints);
  constraints.gridy++;
  add(CoolingTemp_3, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("15) Water Heater Age:"), constraints);
  constraints.gridx++;
  add(WaterHeaterYears0_3, constraints);
  constraints.gridy++;
  add(WaterHeaterYears4_7, constraints);
  constraints.gridy++;
  add(WaterHeaterYears8_12, constraints);
  constraints.gridy++;
  add(WaterHeaterYears13_or_more, constraints);
  constraints.gridy++;
  
  constraints.gridx = 0;
  constraints.gridy++;
  add(new JLabel("16) Extra Appliances, Electronics, and House Additions:"), constraints);
  constraints.gridx++;
  add(TV, constraints);
  constraints.gridy++;
  add(Fridge, constraints);
  constraints.gridy++;
  add(Dishwasher, constraints);
  constraints.gridy++;
  add(Oven, constraints);
  constraints.gridy++;
  add(Stove, constraints);
  constraints.gridy++;
  add(ClothesWasher, constraints);
  constraints.gridy++;
  add(ClothesDryer, constraints);
  constraints.gridy++;
  add(Hot_Tub, constraints);
  constraints.gridy++;
  add(Swimming_Pool, constraints);
  constraints.gridy++;
  add(AC, constraints);
  constraints.gridy++;
  add(Furnace, constraints);
 }
 
 public int getScore() {
  int score = 0;
  if (North_Georgia.isSelected()) {
   score += 5;
  } else if (Atlanta_Metro.isSelected()) {
   score += 6;
  } else if (Coastal_Georgia.isSelected()) {
   score += 7;
  } else if (Coastal_Georgia.isSelected()) {
   score += 10;
  }  
  
  if (TV.isSelected()) {
   score += 2;
  }
  
  if (Fridge.isSelected()) {
   score += 2;
  }
  
  if (Dishwasher.isSelected()) {
   score += 2;
  }
  
  if (Oven.isSelected()) {
   score += 1;
  }
  
  if (Stove.isSelected()) {
	   score += 1;
	  }
  
  if (ClothesWasher.isSelected()) {
	   score += 1;
	  }
  
  if (ClothesDryer.isSelected()) {
	   score += 1;
	  }
  
  if (Hot_Tub.isSelected()) {
   score += 1;
  }
  
  if (Swimming_Pool.isSelected()) {
   score += 3;
  }
  
  if (AC.isSelected()) {
   score += 2;
  }
  
  if (Furnace.isSelected()) {
   score += 1;
  }
  
  return score;
 }
}

class FailurePage extends JPanel {
 
 public FailurePage(String name) {
  add(new JLabel("<html>Sorry " + name + ", you are not energy efficient. Please contact your power company.<br/>Thank you for your time.</html>"));
 }
}

class RedZonePage extends JPanel {
 
 public RedZonePage(String name) {
  add(new JLabel("<html>Sorry " + name + ", you are not energy efficient, it is highly recommend you weatherize your home.<br/>Thank you for your time.</html>"));
 }
}

class PassButRepairsPage extends JPanel {
	 
	 public PassButRepairsPage(String name) {
	  add(new JLabel("<html>You are energy efficient, but heavy repairs neded.<br/>Thank you for your time.</html>"));
	 }
	}

class SuccessPage extends JPanel {
 
 public SuccessPage(String name) {
  add(new JLabel("<html>Congratulations " + name + ",<br/>you are energy efficient! Some minor repairs are recommended. <br/>Thank you for your time.</html>"));
 }
}

